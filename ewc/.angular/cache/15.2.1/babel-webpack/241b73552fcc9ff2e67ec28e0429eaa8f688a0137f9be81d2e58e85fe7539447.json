{"ast":null,"code":"import \"./chunk-NNAAFZ4U.mjs\";\nimport { addons } from \"@storybook/preview-api\";\nimport { FORCE_REMOUNT, STORY_RENDER_PHASE_CHANGED } from \"@storybook/core-events\";\nimport { instrument } from \"@storybook/instrumenter\";\nimport { ModuleMocker } from \"jest-mock\";\nvar JestMock = new ModuleMocker(global),\n  fn = JestMock.fn.bind(JestMock),\n  {\n    action\n  } = instrument({\n    action: fn\n  }, {\n    retain: !0\n  }),\n  channel = addons.getChannel(),\n  seen = new Set(),\n  spies = [];\nchannel.on(FORCE_REMOUNT, () => spies.forEach(mock => mock?.mockClear?.()));\nchannel.on(STORY_RENDER_PHASE_CHANGED, ({\n  newPhase\n}) => {\n  newPhase === \"loading\" && spies.forEach(mock => mock?.mockClear?.());\n});\nvar addSpies = (id, val, key) => {\n    if (seen.has(val)) return val;\n    seen.add(val);\n    try {\n      if (Object.prototype.toString.call(val) === \"[object Object]\") {\n        for (let [k, v] of Object.entries(val)) val[k] = addSpies(id, v, k);\n        return val;\n      }\n      if (Array.isArray(val)) return val.map((item, index) => addSpies(id, item, `${key}[${index}]`));\n      if (typeof val == \"function\" && val.isAction) {\n        Object.defineProperty(val, \"name\", {\n          value: key,\n          writable: !1\n        }), Object.defineProperty(val, \"__storyId__\", {\n          value: id,\n          writable: !1\n        });\n        let spy = action(val);\n        return spies.push(spy), spy;\n      }\n    } catch {}\n    return val;\n  },\n  addActionsFromArgTypes = ({\n    id,\n    initialArgs\n  }) => addSpies(id, initialArgs),\n  argsEnhancers = [addActionsFromArgTypes],\n  {\n    step: runStep\n  } = instrument({\n    step: (label, play, context) => play(context)\n  }, {\n    intercept: !0\n  }),\n  parameters = {\n    throwPlayFunctionExceptions: !1\n  };\nexport { argsEnhancers, parameters, runStep };","map":{"version":3,"names":["addons","FORCE_REMOUNT","STORY_RENDER_PHASE_CHANGED","instrument","ModuleMocker","JestMock","global","fn","bind","action","retain","channel","getChannel","seen","Set","spies","on","forEach","mock","mockClear","newPhase","addSpies","id","val","key","has","add","Object","prototype","toString","call","k","v","entries","Array","isArray","map","item","index","isAction","defineProperty","value","writable","spy","push","addActionsFromArgTypes","initialArgs","argsEnhancers","step","runStep","label","play","context","intercept","parameters","throwPlayFunctionExceptions"],"sources":["/Users/gabriele/Training/microfrontend/ewc/node_modules/@storybook/addon-interactions/dist/preview.mjs"],"sourcesContent":["import\"./chunk-NNAAFZ4U.mjs\";import{addons}from\"@storybook/preview-api\";import{FORCE_REMOUNT,STORY_RENDER_PHASE_CHANGED}from\"@storybook/core-events\";import{instrument}from\"@storybook/instrumenter\";import{ModuleMocker}from\"jest-mock\";var JestMock=new ModuleMocker(global),fn=JestMock.fn.bind(JestMock),{action}=instrument({action:fn},{retain:!0}),channel=addons.getChannel(),seen=new Set,spies=[];channel.on(FORCE_REMOUNT,()=>spies.forEach(mock=>mock?.mockClear?.()));channel.on(STORY_RENDER_PHASE_CHANGED,({newPhase})=>{newPhase===\"loading\"&&spies.forEach(mock=>mock?.mockClear?.())});var addSpies=(id,val,key)=>{if(seen.has(val))return val;seen.add(val);try{if(Object.prototype.toString.call(val)===\"[object Object]\"){for(let[k,v]of Object.entries(val))val[k]=addSpies(id,v,k);return val}if(Array.isArray(val))return val.map((item,index)=>addSpies(id,item,`${key}[${index}]`));if(typeof val==\"function\"&&val.isAction){Object.defineProperty(val,\"name\",{value:key,writable:!1}),Object.defineProperty(val,\"__storyId__\",{value:id,writable:!1});let spy=action(val);return spies.push(spy),spy}}catch{}return val},addActionsFromArgTypes=({id,initialArgs})=>addSpies(id,initialArgs),argsEnhancers=[addActionsFromArgTypes],{step:runStep}=instrument({step:(label,play,context)=>play(context)},{intercept:!0}),parameters={throwPlayFunctionExceptions:!1};export{argsEnhancers,parameters,runStep};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
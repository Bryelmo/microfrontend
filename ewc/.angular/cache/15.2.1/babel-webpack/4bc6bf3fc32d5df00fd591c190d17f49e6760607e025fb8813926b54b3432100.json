{"ast":null,"code":"import { moduleMetadata, componentWrapperDecorator } from '@storybook/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ButtonModule } from 'primeng/button';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { MenuModule } from 'primeng/menu';\nimport { PrimeIcons } from 'primeng/api';\nimport { MenuButtonComponent } from './menu-button.component';\nconst meta = {\n  title: 'Buttons/MenuButton',\n  component: MenuButtonComponent,\n  tags: ['autodocs'],\n  decorators: [moduleMetadata({\n    imports: [BrowserAnimationsModule, ButtonModule, MenuModule, OverlayPanelModule],\n    declarations: [],\n    providers: [],\n    schemas: []\n  }), componentWrapperDecorator(story => `<div style=\"width: 100%\">${story}</div>`)],\n  argTypes: {\n    wrapperClassNames: {\n      description: 'Custom CSS classes as component wraps'\n    },\n    classNames: {\n      description: 'Custom CSS classes'\n    },\n    label: {\n      description: 'Button label'\n    },\n    icon: {\n      description: 'Button icon'\n    },\n    menu: {\n      description: 'The dropdown menu items list'\n    },\n    action: {\n      description: 'The Event action emitted for the parent component'\n    }\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `Component that uses [PrimeNg Button](https://primeng.org/button), [PrimeNg Icons](https://primeng.org/icons) \n\t\t\t\t\t\t\tand [PrimeNg Menu](https://primeng.org/menu) to create an editable button that opens\n\t\t\t\t\t\t\ta popup menu and emit an event for the parent component.<br><br>\n\t\t\t\t\t\t\t• **[wrapperClassNames]** string data used for put CSS classes on the component tag element<br>\n\t\t\t\t\t\t\t• **[classNames]** string data used for put CSS classes to extend the default CSS com≤ponent class<br>\n\t\t\t\t\t\t\t• **[label]** the button label<br>\n\t\t\t\t\t\t\t• **[icon]** a PrimeIcons string CSS class for the button icon<br>\n\t\t\t\t\t\t\t• **[menu]** array data list for show datas using the same structure of [PrimeNg MenuModelItem](https://primeng.org/menumodel)<br>\n\t\t\t\t\t\t\t• **(action)** Map data event action dispathed from the child component to the parent.`\n      }\n    }\n  }\n};\nexport default meta;\nconst sampleDropdownMenu = [{\n  label: 'Edit',\n  icon: PrimeIcons.PENCIL\n}, {\n  label: 'Export',\n  icon: PrimeIcons.FILE\n}, {\n  label: 'Duplicate',\n  icon: PrimeIcons.COPY\n}, {\n  label: 'Archive',\n  icon: PrimeIcons.SERVER\n}];\nexport const _MenuButtonComponent = {\n  args: {\n    wrapperClassNames: '',\n    classNames: '',\n    label: 'Button',\n    icon: 'pi-check',\n    menu: sampleDropdownMenu\n  }\n};","map":{"version":3,"names":["moduleMetadata","componentWrapperDecorator","BrowserAnimationsModule","ButtonModule","OverlayPanelModule","MenuModule","PrimeIcons","MenuButtonComponent","meta","title","component","tags","decorators","imports","declarations","providers","schemas","story","argTypes","wrapperClassNames","description","classNames","label","icon","menu","action","parameters","docs","sampleDropdownMenu","PENCIL","FILE","COPY","SERVER","_MenuButtonComponent","args"],"sources":["/Users/gabriele/Training/ewc/projects/ewc/src/lib/components/_buttons/menu-button/menu-button.stories.ts"],"sourcesContent":["import { moduleMetadata, componentWrapperDecorator } from '@storybook/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ButtonModule } from 'primeng/button';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { MenuModule } from 'primeng/menu';\nimport { PrimeIcons } from 'primeng/api';\nimport { MenuButtonComponent } from './menu-button.component';\nconst meta = {\n    title: 'Buttons/MenuButton',\n    component: MenuButtonComponent,\n    tags: ['autodocs'],\n    decorators: [moduleMetadata({\n            imports: [\n                BrowserAnimationsModule,\n                ButtonModule,\n                MenuModule,\n                OverlayPanelModule\n            ],\n            declarations: [],\n            providers: [],\n            schemas: []\n        }),\n        componentWrapperDecorator((story) => `<div style=\"width: 100%\">${story}</div>`)],\n    argTypes: {\n        wrapperClassNames: { description: 'Custom CSS classes as component wraps' },\n        classNames: { description: 'Custom CSS classes' },\n        label: { description: 'Button label' },\n        icon: { description: 'Button icon' },\n        menu: { description: 'The dropdown menu items list' },\n        action: { description: 'The Event action emitted for the parent component' },\n    },\n    parameters: {\n        docs: {\n            description: {\n                component: `Component that uses [PrimeNg Button](https://primeng.org/button), [PrimeNg Icons](https://primeng.org/icons) \n\t\t\t\t\t\t\tand [PrimeNg Menu](https://primeng.org/menu) to create an editable button that opens\n\t\t\t\t\t\t\ta popup menu and emit an event for the parent component.<br><br>\n\t\t\t\t\t\t\t• **[wrapperClassNames]** string data used for put CSS classes on the component tag element<br>\n\t\t\t\t\t\t\t• **[classNames]** string data used for put CSS classes to extend the default CSS com≤ponent class<br>\n\t\t\t\t\t\t\t• **[label]** the button label<br>\n\t\t\t\t\t\t\t• **[icon]** a PrimeIcons string CSS class for the button icon<br>\n\t\t\t\t\t\t\t• **[menu]** array data list for show datas using the same structure of [PrimeNg MenuModelItem](https://primeng.org/menumodel)<br>\n\t\t\t\t\t\t\t• **(action)** Map data event action dispathed from the child component to the parent.`\n            }\n        }\n    },\n};\nexport default meta;\nconst sampleDropdownMenu = [\n    { label: 'Edit', icon: PrimeIcons.PENCIL },\n    { label: 'Export', icon: PrimeIcons.FILE },\n    { label: 'Duplicate', icon: PrimeIcons.COPY },\n    { label: 'Archive', icon: PrimeIcons.SERVER }\n];\nexport const _MenuButtonComponent = {\n    args: {\n        wrapperClassNames: '',\n        classNames: '',\n        label: 'Button',\n        icon: 'pi-check',\n        menu: sampleDropdownMenu\n    },\n};\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,yBAAyB,QAAQ,oBAAoB;AAC9E,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,MAAMC,IAAI,GAAG;EACTC,KAAK,EAAE,oBAAoB;EAC3BC,SAAS,EAAEH,mBAAmB;EAC9BI,IAAI,EAAE,CAAC,UAAU,CAAC;EAClBC,UAAU,EAAE,CAACZ,cAAc,CAAC;IACpBa,OAAO,EAAE,CACLX,uBAAuB,EACvBC,YAAY,EACZE,UAAU,EACVD,kBAAkB,CACrB;IACDU,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE;EACb,CAAC,CAAC,EACFf,yBAAyB,CAAEgB,KAAK,IAAM,4BAA2BA,KAAM,QAAO,CAAC,CAAC;EACpFC,QAAQ,EAAE;IACNC,iBAAiB,EAAE;MAAEC,WAAW,EAAE;IAAwC,CAAC;IAC3EC,UAAU,EAAE;MAAED,WAAW,EAAE;IAAqB,CAAC;IACjDE,KAAK,EAAE;MAAEF,WAAW,EAAE;IAAe,CAAC;IACtCG,IAAI,EAAE;MAAEH,WAAW,EAAE;IAAc,CAAC;IACpCI,IAAI,EAAE;MAAEJ,WAAW,EAAE;IAA+B,CAAC;IACrDK,MAAM,EAAE;MAAEL,WAAW,EAAE;IAAoD;EAC/E,CAAC;EACDM,UAAU,EAAE;IACRC,IAAI,EAAE;MACFP,WAAW,EAAE;QACTV,SAAS,EAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACY;IACJ;EACJ;AACJ,CAAC;AACD,eAAeF,IAAI;AACnB,MAAMoB,kBAAkB,GAAG,CACvB;EAAEN,KAAK,EAAE,MAAM;EAAEC,IAAI,EAAEjB,UAAU,CAACuB;AAAO,CAAC,EAC1C;EAAEP,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAEjB,UAAU,CAACwB;AAAK,CAAC,EAC1C;EAAER,KAAK,EAAE,WAAW;EAAEC,IAAI,EAAEjB,UAAU,CAACyB;AAAK,CAAC,EAC7C;EAAET,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAEjB,UAAU,CAAC0B;AAAO,CAAC,CAChD;AACD,OAAO,MAAMC,oBAAoB,GAAG;EAChCC,IAAI,EAAE;IACFf,iBAAiB,EAAE,EAAE;IACrBE,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAEI;EACV;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}